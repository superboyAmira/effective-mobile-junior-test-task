package mock

import (
	"context"
	"log/slog"
	"online-song-library/internal/model"

	"github.com/google/uuid"
	"github.com/stretchr/testify/mock"
)

// MockRepository is an autogenerated mock type for the Repository type
type MockRepository struct {
	mock.Mock
}

func (m *MockRepository) Create(ctx context.Context, log *slog.Logger, song model.Song) (uuid.UUID, error) {
	ret := m.Called(ctx, log, song)
	return ret.Get(0).(uuid.UUID), ret.Error(1)
}

func (m *MockRepository) Update(ctx context.Context, log *slog.Logger, song model.Song) (model.Song, error) {
	ret := m.Called(ctx, log, song)
	return ret.Get(0).(model.Song), ret.Error(1)
}

func (m *MockRepository) Delete(ctx context.Context, log *slog.Logger, songUUID uuid.UUID) error {
	ret := m.Called(ctx, log, songUUID)
	return ret.Error(0)
}

func (m *MockRepository) GetAll(ctx context.Context, log *slog.Logger, limit int, offset int, filter model.SongFilter) ([]model.Song, error) {
	ret := m.Called(ctx, log, limit, offset, filter)
	return ret.Get(0).([]model.Song), ret.Error(1)
}

func (m *MockRepository) GetVerses(ctx context.Context, log *slog.Logger, songUUID uuid.UUID) (string, error) {
	ret := m.Called(ctx, log, songUUID)
	return ret.Get(0).(string), ret.Error(1)
}
